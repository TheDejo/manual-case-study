@use '../../style/core.scss' as core;
@use '../../style/typography.scss' as typography;
@use '../../style/breakpoint.scss' as breakpoint;
@use '../../style/color.scss' as color;

.modalContainer {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: color.$white;
    z-index: 1000;
    animation: fadeIn 0.3s ease-out;
}

.modal {
    background-color: color.$white;
    height: 100vh;
    width: 100%;
    animation: slideIn 0.3s ease-out;
    position: relative;
    display: flex;
    flex-direction: column;
}

.modalHeader {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: core.$space4 core.$space4 0;

    @include breakpoint.md {
        padding: core.$space5 core.$space5 0;
    }
}

.modalTitle {
    @include typography.heading4;
    margin: 0;
    color: color.$text-green;

    @include breakpoint.md {
        @include typography.heading3;
    }
}

.closeButton {
    background: none;
    border: none;
    cursor: pointer;
    padding: core.$space2;
    border-radius: 6px;
    color: color.$text-green;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;

    &:hover {
        background-color: color.$white;
        color: color.$text-green;
    }

    &:focus {
        outline: 2px solid color.$primary-color;
        outline-offset: 2px;
    }

    svg {
        width: 20px;
        height: 20px;

        @include breakpoint.md {
            width: 24px;
            height: 24px;
        }
    }
}

.modalContent {
    padding: core.$space4;
    flex: 1;
    overflow-y: auto;

    @include breakpoint.md {
        padding: core.$space5;
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateY(-20px) scale(0.95);
    }
    to {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}

.modal:focus {
    outline: none;
}

@media (max-height: 600px) {
    .modalContent {
        max-height: calc(100vh - 100px);
    }
} 